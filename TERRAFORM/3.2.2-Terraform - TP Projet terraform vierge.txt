vars.tf
=======

variable  "pm_api_url" {
    default =  "https://< IP | FQDN >:8006/api2/json"
}
variable  "pm_api_token_id" {
    default =  "<utilisateur du token>!<Rôle>"
}
variable  "pm_api_token_secret" {
    default =  "<Contenu du token créé sur le proxmox>"
}
variable  "target_node" {
    default =  "<nom du noeud Proxmox>"
}
variable "clone" {
    default =  "debian11-modele-terra" (c'est le nom du modèle créé précédemment)
}

variable  "ssh_key" {
    default =  "<clée publique de l'utilisateur que vous allez utiliser pour vous connecter>"
}



provider.tf
===========

terraform {
    required_providers {
        proxmox =  {
        source = "Telmate/proxmox"
        version = "2.9.11"
        }
    }
}

provider "proxmox" {
    # A activer pour le debugage
    # pm_debug = true
    # Accepte les certificats autosignés
    pm_tls_insecure = true
    pm_api_url = var.pm_api_url
    pm_api_token_id= var.pm_api_token_id
    pm_api_token_secret= var.pm_api_token_secret
}



main.tf
=======

resource "proxmox_vm_qemu" "test_terra" {
  desc = "Deploiement 2 VM Debian sur Proxmox"
  count = 2
  name = "test-vm${count.index + 1}"
  target_node = var.target_node
  clone = var.clone

  os_type = "cloud-init"
  cores = 2
  sockets = 1
  cpu = "host"
  memory = 2048
  scsihw = "virtio-scsi-pci"
  bootdisk = "scsi0"

  disk {
    slot = 0
    size = "2G"
    type = "scsi"
    storage = "data"
    iothread = 1
  }

  network {
    model = "virtio"
    bridge = "vmbr0"
  }

  ipconfig0 = "ip=192.168.1.${count.index + 120}/24,gw=192.168.1.1"
  nameserver = "8.8.8.8"
  sshkeys = <<EOF
  ${var.ssh_key}
  EOF
}



